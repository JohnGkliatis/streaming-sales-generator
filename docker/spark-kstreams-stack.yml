# Command: docker stack deploy streaming-stack --compose-file docker/spark-kstreams-stack.yml
# Gary A. Stafford (2022-09-14)
# Updated: 2022-12-28

version: "3.9"

services:
  spark:
    image: "bitnami/spark:3.5.4"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"
    networks:
      - streaming-stack
  spark-worker:
    image: "bitnami/spark:3.5.4"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    networks:
      - streaming-stack
#  jupyter:
#    image: "jupyter/pyspark-notebook:spark-3.3.1"
#    ports:
#      - "8888:8888"
#      - "4040-4045:4040-4045"
#    user: root
#    environment:
#      NB_GID: 100
#      GRANT_SUDO: "yes"
#    volumes:
#      - "${PWD}:/home/jovyan/work"
#    networks:
#      - streaming-stack
  zookeeper:
    image: "bitnami/zookeeper:3.9.3"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - streaming-stack
  kafka:
    image: "bitnami/kafka:3.9.0"
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,PLAINTEXT_HOST://kafka:29092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    #volumes:
    #  - /tmp:/bitnami/kafka
    depends_on:
      - zookeeper
    networks:
      - streaming-stack
  kstreams:
    image: "garystafford/kstreams-kafka-demo:1.0.0"
    depends_on:
      - kafka
    networks:
      - streaming-stack
  kafka-ui:
    image: "provectuslabs/kafka-ui"
    ports:
      - "9080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=streaming-demo
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
    depends_on:
      - kafka
    networks:
      - streaming-stack

networks:
  streaming-stack:
